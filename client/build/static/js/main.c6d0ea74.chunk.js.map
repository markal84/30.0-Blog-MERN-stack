{"version":3,"sources":["config.js","redux/postsRedux.js","redux/store.js","components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","components/common/Spinner/Spinner.js","components/common/HtmlBox/HtmlBox.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/features/PostsSummary/PostsSummary.js","components/common/cutText/cutText.js","components/features/PostsList/PostsList.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPostPage.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/SinglePost/SinglePostPage.js","App.js","index.js"],"names":["BASE_URL","getPosts","posts","data","getRequest","request","getPages","Math","ceil","amount","postsPerPage","createActionName","name","LOAD_POSTS","LOAD_SINGLE_POST","START_REQUEST","END_REQUEST","ERROR_REQUEST","RESET_REQUEST","LOAD_POSTS_PAGE","startRequest","type","endRequest","errorRequest","error","resetRequest","loadPostsByPage","payload","initialState","pending","success","presentPage","singlePost","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","PageContainer","children","className","Logo","links","location","MainMenu","map","link","index","key","pathname","path","to","title","withRouter","props","NavBar","state","this","React","Component","MainLayout","PageTitle","Spinner","animationIn","animationOut","HtmlBox","otherProps","ReactHtmlParser","Button","variant","SmallTitle","PostSummary","id","content","author","maxLength","length","substr","lastIndexOf","cutText","PostsList","post","Alert","icon","Pagination","initialPage","changePage","newPage","onPageChange","setState","prevPage","nextPage","pages","onClick","Array","el","page","Posts","loadPostsPage","console","log","pagination","undefined","connect","dispatch","a","startAt","limit","axios","get","res","message","loadPostsByPageRequest","HomePage","PostsCounter","loadPosts","counter","PostsPage","ContactPage","NotFoundPage","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","target","handleEditor","text","addPost","preventDefault","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","AddPostPage","SinglePost","loadSinglePost","match","params","appId","href","loadSinglePostRequest","SinglePostPage","App","exact","component","Home","Contact","AddPost","NotFound","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c6d0ea74.chunk.js","sourcesContent":["export const API_URL = '/api';\r\nexport const BASE_URL = 'https://kodillablog.herokuapp.com';","import axios from 'axios'; // much simpler sendin req to server\r\nimport { API_URL, BASE_URL } from '../config'; \r\n\r\n\r\n/* SELECTORS */\r\n\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const getPostsCounter = ({ posts }) => posts.data.length; //new selector to count posts on posts page\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const getSinglePost = ({ posts }) => posts.singlePost; //SinglePost exercise\r\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage); // pagination exercise\r\nexport const getPostsPerPage = ({ posts }) => posts.postsPerPage; //pagination exercise \r\n\r\n/* ACTIONS */\r\n// action name creator\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST'); //SinglePost exercise\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const RESET_REQUEST = createActionName('RESET_REQUEST'); //add post exercise\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE'); //pagination exercise\r\n\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const loadSinglePost = payload => ({ payload, type: LOAD_SINGLE_POST }) //singlePost exercise\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const resetRequest = () => ({ type: RESET_REQUEST }); //single post exercise\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE }); //pagination exercise\r\n\r\n\r\n/* INITIAL STATE */\r\n\r\nconst initialState = {\r\n  data: [],\r\n  request: {\r\n    pending: false,\r\n    error: null,\r\n    success: null,\r\n  },\r\n  amount: 0, //pagination exercise\r\n  postsPerPage: 10, //pagination exercise\r\n  presentPage: 1, //pagination exercise\r\n  singlePost: [] //singlePost exercise\r\n};\r\n\r\n\r\n/* REDUCER */\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n    switch (action.type) {\r\n      case LOAD_POSTS:\r\n        return { ...statePart, data: action.payload };\r\n      case LOAD_SINGLE_POST:\r\n        return { ...statePart, singlePost: action.payload }; //singlePost exercise\r\n      case LOAD_POSTS_PAGE: //pagination exercise\r\n        return {\r\n          ...statePart,\r\n          postsPerPage: action.payload.postsPerPage,\r\n          presentPage: action.payload.presentPage,\r\n          amount: action.payload.amount,\r\n          data: [...action.payload.posts],\r\n          };  \r\n      case START_REQUEST:\r\n        return { ...statePart, request: { pending: true, error: null, success: null } };\r\n      case END_REQUEST:\r\n        return { ...statePart, request: { pending: false, error: null, success: true } };\r\n      case ERROR_REQUEST:\r\n        return { ...statePart, request: { pending: false, error: action.error, success: false } }; \r\n      case RESET_REQUEST:\r\n        return { ...statePart, request: { pending: false, error: null, success: null } };  \r\n      default:\r\n        return statePart;\r\n    }\r\n};\r\n\r\n/* THUNKS */\r\n\r\nexport const loadPostsRequest = () => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n\r\n      let res = await axios.get(`${BASE_URL}${API_URL}/posts`);\r\n      \r\n      dispatch(loadPosts(res.data));\r\n      dispatch(endRequest());\r\n\r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const loadSinglePostRequest = (id) => { //singlePost exercise\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n      let res = await axios.get(`${BASE_URL}${API_URL}/posts/${id}`);\r\n      \r\n      dispatch(loadSinglePost(res.data));\r\n      dispatch(endRequest());\r\n\r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n\r\n      //const postsPerPage = 10;\r\n\r\n      const startAt = (page - 1) * postsPerPage;\r\n      const limit = postsPerPage;\r\n\r\n      let res = await axios.get(`${BASE_URL}${API_URL}/posts/range/${startAt}/${limit}`);\r\n      \r\n\r\n      const payload = {\r\n        posts: res.data.posts,\r\n        amount: res.data.amount,\r\n        postsPerPage,\r\n        presentPage: page,\r\n      };\r\n\r\n      dispatch(loadPostsByPage(payload));\r\n      dispatch(endRequest());\r\n\r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const addPostRequest = (post) => { //add post exercise\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n\r\n      let res = await axios.post(`${BASE_URL}${API_URL}/posts`, post);\r\n      \r\n      dispatch(endRequest());\r\n\r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n// import reducers\r\nimport posts from './postsRedux';\r\n\r\n// combine reducers\r\nconst rootReducer = combineReducers({\r\n  posts,\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n\t\tapplyMiddleware(thunk),\r\n\t\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n\t)\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './PageContainer.scss';\r\n\r\nconst PageContainer = ({ children }) => (\r\n  <div className=\"container-fluid\">\r\n    {children}\r\n  </div>\r\n);\r\n\r\nPageContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default PageContainer;\r\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\r\n\r\nimport Logo from '../../common/Logo/Logo';\r\nimport MainMenu from '../../layout/MainMenu/MainMenu';\r\nimport './NavBar.scss'\r\n\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  state = {\r\n    links: [\r\n      { path: '/', title: 'Home' },\r\n      { path: '/posts/new', title: 'Add post' },\r\n      { path: '/posts', title: 'Posts' },\r\n      { path: '/contact', title: 'Contact' },\r\n    ],\r\n  }\r\n\r\n  render() {\r\n    const { links } = this.state;\r\n  \r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Logo />\r\n        <MainMenu links={links} />\r\n      </nav>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\n\r\nconst MainLayout = ({ children }) => (\r\n  <div>\r\n    <PageContainer>\r\n      <NavBar />\r\n      {children}\r\n    </PageContainer>\r\n  </div>\r\n);\r\n\r\nexport default MainLayout;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './PageTitle.scss';\r\n\r\nconst PageTitle = ({ children }) => (\r\n  <h1 className=\"page-title\">\r\n     {children}\r\n  </h1>\r\n);\r\n\r\nPageTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default PageTitle;\r\n","import React from 'react';\r\nimport { Animated } from 'react-animated-css';\r\n\r\nimport './Spinner.scss';\r\n\r\nconst Spinner = () => (\r\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n    <div className=\"lds-ellipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </Animated>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n  <p {...otherProps} className=\"html-box\">\r\n    {ReactHtmlParser(children)}\r\n  </p>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './SmallTitle.scss';\r\n\r\nconst SmallTitle = ({ children, ...otherProps }) => (\r\n  <h2 {...otherProps} className=\"small-title\">\r\n    { children }\r\n  </h2>\r\n);\r\n\r\nSmallTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SmallTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport '../PostsSummary/PostsSummary.scss';\r\nimport { Link } from 'react-router-dom'; //single post exercise\r\n\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport cutText from '../../common/cutText/cutText';\r\n\r\nconst PostSummary = ({ id, title, content, author }) => (\r\n    <article className=\"post-summary\">\r\n      <SmallTitle>{title}</SmallTitle>\r\n      <p>Author: {author}</p>\r\n      <HtmlBox>{cutText(content, 250)}</HtmlBox>\r\n      <Button variant=\"primary\"> \r\n        <Link to={`/posts/${id}`}>Read more</Link> \r\n      </Button>\r\n    </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  content: PropTypes.string,\r\n  author: PropTypes.string\r\n};\r\n\r\nexport default PostSummary;","export default (content, maxLength) => {\r\n    if(content.length < 1) return 'Post is too short';\r\n    if(content.length <= maxLength) return content;\r\n    return content.substr(0, content.lastIndexOf(' ', maxLength)) + '...';\r\n};","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostSummary from '../PostsSummary/PostsSummary';\r\n\r\nconst PostsList = ({ posts }) => (\r\n  <div>\r\n    <section className=\"posts-list\">\r\n      {posts.map(post => <PostSummary key={post.id} {...post} />)}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired //new attribute exercise\r\n    })\r\n  ),\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends React.Component {\r\n\r\n  state = {\r\n    presentPage: this.props.initialPage || 1\r\n  }  \r\n\r\n  \r\n  changePage = (newPage) => {\r\n    const { onPageChange } = this.props;\r\n    this.setState({ presentPage: newPage });\r\n    onPageChange(newPage);\r\n  }\r\n\r\n\tprevPage = () => {\r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n    if (presentPage > 1 )\r\n    changePage(presentPage - 1)\r\n  };\r\n\r\n  nextPage = () => {\r\n  \tconst { pages } = this.props;\r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n    if (presentPage < pages )\r\n    changePage(presentPage + 1)\r\n  };\r\n  \r\n\r\n  render() {\r\n\r\n    const { pages } = this.props;\r\n    const { presentPage } = this.state;\r\n    const { changePage, prevPage, nextPage } = this;\r\n  \r\n    return (\r\n\t    <div className=\"pagination\">\r\n\t      <ul className=\"pagination__list\">\r\n\t      \t{ presentPage > 1 ? ( //ES6 version of if\r\n            <li\r\n              className={`pagination__list__item${(true) ? ' pagination__list__item--active' : '' }`}\r\n\t            onClick={prevPage}>\r\n\t            &lt;\r\n            </li>) : ''}\r\n\r\n\t        {[...Array(pages)].map((el, page) => (\r\n\t\t        <li\r\n\t\t            key={++page}\r\n\t\t            onClick={() => { changePage(page) }}\r\n\t\t            className={`pagination__list__item${((page) === presentPage) ? ' pagination__list__item--active' : ''}`}>\r\n\t\t            {page}\r\n\t\t        </li>\r\n\t        ))}\r\n\r\n\t        {presentPage === pages ?  '' : (\r\n            <li\r\n              className={`pagination__list__item${(true) ? ' pagination__list__item--active' : '' }`}\r\n              onClick={nextPage}>\r\n              &gt;\r\n          \t</li>)}\r\n\t      </ul>\r\n\t    </div>\r\n\t  );\r\n  }\r\n}\r\n\r\nPagination.propTypes = {\r\n  pages: PropTypes.number.isRequired,\r\n  initialPage: PropTypes.number,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination'; //pagination exercise\r\n\r\nclass Posts extends React.Component {\r\n\r\n  componentDidMount() {\r\n    const { loadPostsByPage, initialPage, postsPerPage } = this.props;\r\n    loadPostsByPage(initialPage || 1, postsPerPage || 10);\r\n    console.log(postsPerPage, initialPage);\r\n  }\r\n\r\n  loadPostsPage = (page) => {\r\n    const { loadPostsByPage, postsPerPage } = this.props;\r\n    loadPostsByPage(page, postsPerPage || 10);\r\n  }\r\n\r\n  render() {\r\n    const { posts, request, pages, presentPage } = this.props;\r\n    let { pagination } = this.props; // it can't be const\r\n    const { loadPostsPage } = this;\r\n\r\n    if (pagination === undefined) {\r\n      pagination = true\r\n    } \r\n  \r\n    if (request.pending === false && request.success === true && posts.length > 0) {\r\n      return (\r\n          <div>\r\n              <PostsList posts={posts}/>\r\n              { pagination && <Pagination pages={pages} onPageChange={loadPostsPage} initialPage={presentPage}/> }; \r\n          </div>\r\n      );\r\n    } else if (request.pending === true || request.success === null) {\r\n      return (\r\n          <div>\r\n              <Spinner/>\r\n          </div>\r\n      );\r\n    } else if (request.pending === false && request.error !== null) {\r\n      return (\r\n          <div>\r\n              <Alert variant={'error'}>{request.error}</Alert>\r\n          </div>\r\n      );\r\n    } else if (request.pending === false && request.success === true && posts.length === 0) {\r\n      return (\r\n          <div>\r\n              <Alert variant={'info'}>No posts</Alert>\r\n          </div>\r\n      );\r\n    } else {\r\n      return (\r\n          <div>\r\n              <Alert variant={'info'}>Error...</Alert>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n\r\n};\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired\r\n    })\r\n  ),\r\n  loadPostsByPage: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default Posts;","import { connect } from 'react-redux';\r\nimport { getPosts, getRequest, loadPostsByPageRequest, getPages } from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n<div>\r\n  <PageTitle>Blog</PageTitle>\r\n  <Posts postsPerPage={3} pagination={false} />\r\n</div>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nclass PostsCounter extends React.Component {\r\n\r\n  componentDidMount() {\r\n      const { loadPosts } = this.props;\r\n      loadPosts();\r\n  }\r\n\r\n  render() {\r\n      const { counter } = this.props;\r\n\r\n      return (\r\n          <div>{counter > 0 ? 'Posts amount: ' + counter : ' No posts '}</div>\r\n      )\r\n  }\r\n}\r\n\r\nexport default PostsCounter;","import { connect } from 'react-redux';\r\nimport { getPosts, getPostsCounter, loadPostsRequest} from '../../../redux/postsRedux';\r\nimport PostsCounter from './PostsCounter';\r\n\r\nconst mapStateToProps = state => ({\r\n    posts: getPosts(state),\r\n    counter: getPostsCounter(state)\r\n})\r\n  \r\nconst mapDispatchToProps = dispatch => ({\r\n    loadPosts: () => dispatch(loadPostsRequest()),\r\n});\r\n  \r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostsCounter);","import React from 'react';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\r\n\r\nconst PostsPage = () => (\r\n  <div>\r\n    <Posts />\r\n    <PostsCounter />\r\n  </div>\r\n);\r\n\r\nexport default PostsPage;","import React from 'react';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst ContactPage = () => (\r\n  <div>\r\n    <PageTitle>Kontakt</PageTitle>\r\n    <div>\r\n      <p>Your Favourite Blooger Ltd.</p>\r\n      <p>9432 Division Street</p>\r\n      <p>Stone Mountain, GA 30083</p>\r\n      <br></br>\r\n      <p>Mobile Number: 207-914-3411</p>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    <h1>404 Not Found</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\n\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n\r\n  state = {\r\n    post: {\r\n      title: '',\r\n      author: '',\r\n      content: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, [e.target.name]: e.target.value }})\r\n  }\r\n\r\n  handleEditor = (text) => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, content: text }})\r\n  }\r\n\r\n  addPost = (e) => {\r\n    const { addPost } = this.props;\r\n    const { post } = this.state;\r\n\r\n    e.preventDefault();\r\n    addPost(post);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { post } = this.state;\r\n    const { handleChange, handleEditor, addPost } = this;\r\n    const { request } = this.props;\r\n\r\n    if(request.error) return <Alert variant=\"error\">{request.error}</Alert>\r\n    else if(request.success) return <Alert variant=\"success\">Post has been added!</Alert>\r\n    else if(request.pending) return <Spinner />\r\n    else return (\r\n      <form onSubmit={addPost}>\r\n\r\n        <TextField\r\n          label=\"Title\"\r\n          value={post.title}\r\n          onChange={handleChange}\r\n          name=\"title\"\r\n        />\r\n\r\n        <TextField\r\n          label=\"Author\"\r\n          value={post.author}\r\n          onChange={handleChange}\r\n          name=\"author\"\r\n        />\r\n\r\n        <SectionTitle>Edit post content</SectionTitle>\r\n\r\n        <Editor\r\n          className=\"content-editor\"\r\n          text={post.content}\r\n          onChange={handleEditor}\r\n          options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n        />\r\n\r\n        <Button variant=\"primary\">Add post</Button>\r\n\r\n      </form>\r\n    );\r\n  }\r\n};\r\n\r\nPostForm.propTypes = {\r\n  request: PropTypes.object.isRequired,\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostForm;","import { connect } from 'react-redux';\r\nimport { getRequest, addPostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addPost: (post) => dispatch(addPostRequest(post)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import React from 'react';\r\nimport PostForm from '../../features/PostForm/PostFormContainer';\r\n\r\nconst AddPostPage = () => (\r\n  <div>\r\n    <PostForm />\r\n  </div>\r\n);\r\n\r\nexport default AddPostPage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook'; //facebook comments exercise\r\nimport { BASE_URL } from \"../../../config\"; //facebook comments exercise\r\n\r\nclass SinglePost extends React.Component {\r\n\r\n    componentDidMount() {\r\n        const {loadSinglePost, resetRequest, match} = this.props;\r\n        loadSinglePost(match.params.id); // i have to include match() to dipslpay single post properly\r\n        resetRequest(); // add post exercise\r\n    }\r\n\r\n    render() {\r\n        const { post, request, location } = this.props;\r\n\r\n        if (request.pending === false && request.success === true && post ) {\r\n            return (\r\n                <div>\r\n                    <SmallTitle>{post.title}</SmallTitle>\r\n                    <p>Author: {post.author}</p>\r\n                    <HtmlBox>{post.content}</HtmlBox>\r\n                    <FacebookProvider appId=\"2605117792877968\">\r\n                        <Comments href={`${BASE_URL}/${location.pathname}`} />\r\n                        <ShareButton href={`${BASE_URL}/${location.pathname}`}>\r\n                            Share Post\r\n                        </ShareButton>\r\n                    </FacebookProvider>\r\n                </div>\r\n            );\r\n        } else if (request.pending === true || request.success === null) {\r\n            return (\r\n                <div>\r\n                    <Spinner/>\r\n                </div>\r\n            );\r\n        } else if (request.pending === false && request.error !== null) {\r\n            return (\r\n                <div>\r\n                    <Alert variant={'error'}>{request.error}</Alert>\r\n                </div>\r\n            );\r\n        } else if (request.pending === false && request.success === true) {\r\n            return (\r\n                <div>\r\n                    <Alert variant={'info'}>This post don't exist</Alert>\r\n                </div>\r\n            );\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <Alert variant={'info'}>Something went wrong...</Alert>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    \r\n}\r\n\r\nSinglePost.propTypes = {\r\n    posts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            title: PropTypes.string.isRequired,\r\n            content: PropTypes.string.isRequired,\r\n            author: PropTypes.string.isRequired\r\n        })\r\n    ),\r\n    loadSinglePost: PropTypes.func.isRequired,\r\n    resetRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(props => <SinglePost {...props}/>); //withRouter function used to fix single post display\r\n","import { connect } from 'react-redux';\r\nimport { getSinglePost, getRequest, loadSinglePostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst mapStateToProps = state => ({\r\n    post: getSinglePost(state),\r\n    request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    loadSinglePost: (id) => dispatch(loadSinglePostRequest(id)), //it must have an id attribute\r\n    resetRequest: () => dispatch(resetRequest()), // add post exercise \r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);","import React from 'react';\r\n\r\nimport SinglePost from '../../features/SinglePost/SinglePostContainer';\r\n\r\n\r\nconst SinglePostPage = () => (\r\n  <div>\r\n    <SinglePost />\r\n  </div>\r\n);\r\n\r\nexport default SinglePostPage;","import React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nimport MainLayout from './components/layout/MainLayout/MainLayout';\r\nimport Home from './components/pages/Home/HomePage';\r\nimport Posts from './components/pages/Posts/PostsPage';\r\nimport Contact from './components/pages/Contact/ContactPage';\r\nimport NotFound from './components/pages/NotFound/NotFoundPage';\r\nimport AddPost from './components/pages/AddPost/AddPostPage';\r\nimport SinglePost from './components/pages/SinglePost/SinglePostPage';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <MainLayout>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/posts\" exact component={Posts} />\r\n          <Route path=\"/contact\" exact component={Contact} />\r\n          <Route path=\"/posts/new\" exact component={AddPost} />\r\n          <Route path=\"/posts/:id\" exact component={SinglePost} />\r\n          <Route component={NotFound} />\r\n        </Switch>\r\n      </MainLayout>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './styles/global.scss';\r\nimport 'animate.css/animate.min.css';\r\nimport store from './redux/store';\r\nimport App from './App';\r\n\r\nconst Root = () => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));"],"sourceRoot":""}